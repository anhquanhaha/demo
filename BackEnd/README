# AI Agent v·ªõi LangGraph
## üß† Gi·ªõi Thi·ªáu D·ª± √Ån
D·ª± √°n n√†y l√† m·ªôt h·ªá th·ªëng AI Agent ƒë∆∞·ª£c x√¢y d·ª±ng tr√™n n·ªÅn t·∫£ng **LangGraph**, gi√∫p tri·ªÉn khai c√°c t√°c v·ª• th√¥ng minh theo lu·ªìng x·ª≠ l√Ω c√≥ th·ªÉ m·ªü r·ªông. M·ª•c ti√™u c·ªßa d·ª± √°n l√† cung c·∫•p m·ªôt ki·∫øn tr√∫c r√µ r√†ng, d·ªÖ b·∫£o tr√¨ v√† ph√°t tri·ªÉn th√™m trong t∆∞∆°ng lai.

## üìÅ C·∫•u Tr√∫c Th∆∞ M·ª•c
| Th∆∞ m·ª•c        | M√¥ t·∫£ |
|----------------|-------|
| `src/`         | Ch·ª©a to√†n b·ªô source code ch√≠nh |
| `src/agents/`  | C√°c agent x·ª≠ l√Ω t√°c v·ª• (v√≠ d·ª•: ResearcherAgent, WriterAgent) |
| `src/nodes/`   | C√°c node trong graph, m·ªói node l√† m·ªôt b∆∞·ªõc x·ª≠ l√Ω |
| `src/graphs/`  | Ch·ª©a logic x√¢y d·ª±ng v√† k·∫øt n·ªëi graph b·∫±ng LangGraph |
| `src/state/`   | ƒê·ªãnh nghƒ©a tr·∫°ng th√°i (state) c·ªßa agent v√† schema d√πng Pydantic |
| `src/tools/`   | C√°c c√¥ng c·ª• h·ªó tr·ª£ agent nh∆∞ t√¨m ki·∫øm, LLM, database |
| `src/utils/`   | C√°c h√†m h·ªó tr·ª£ chung nh∆∞ config, logger, validators |
| `configs/`     | File c·∫•u h√¨nh YAML cho agent, graph v√† tools |

## üõ† C√¥ng Ngh·ªá S·ª≠ D·ª•ng
- **LangGraph**: X√¢y d·ª±ng lu·ªìng x·ª≠ l√Ω ƒëa b∆∞·ªõc cho AI Agent
- **LangChain**: H·ªó tr·ª£ k·∫øt n·ªëi v·ªõi LLM v√† qu·∫£n l√Ω chain logic
- **OpenAI API**: D√πng l√†m engine x·ª≠ l√Ω ng√¥n ng·ªØ
- **Pydantic**: Qu·∫£n l√Ω state v√† validate d·ªØ li·ªáu
- **YAML**: ƒê·ªãnh nghƒ©a c·∫•u h√¨nh linh ho·∫°t
- **Python 3.10+**: Ng√¥n ng·ªØ l·∫≠p tr√¨nh ch√≠nh

## üöÄ M·ª•c Ti√™u D·ª± √Ån
- Cung c·∫•p m·ªôt h·ªá th·ªëng AI agent linh ho·∫°t v√† d·ªÖ m·ªü r·ªông
- H·ªó tr·ª£ nhi·ªÅu mode ch·∫°y: t∆∞∆°ng t√°c (interactive), ch·∫°y ƒë∆°n (task), ch·∫°y h√†ng lo·∫°t (batch)
- D·ªÖ d√†ng t√≠ch h·ª£p th√™m agent m·ªõi ho·∫∑c ƒëi·ªÅu ch·ªânh lu·ªìng x·ª≠ l√Ω